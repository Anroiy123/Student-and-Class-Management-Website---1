import { connectToDatabase } from '../src/config/database';
import { TeacherModel } from '../src/models/teacher.model';
import { UserModel } from '../src/models/user.model';
import { ClassModel } from '../src/models/class.model';
import { hashPassword } from '../src/utils/password';

// D·ªØ li·ªáu gi·∫£ng vi√™n th·∫≠t
const teachersData = [
  {
    teacherId: 'GV001',
    fullName: 'Nguy·ªÖn VƒÉn An',
    department: 'Khoa C√¥ng ngh·ªá Th√¥ng tin',
    position: 'Gi·∫£ng vi√™n ch√≠nh',
    phone: '0901234567',
    dateOfBirth: new Date('1980-03-15'),
    address: 'Qu·∫≠n 1, TP.HCM',
  },
  {
    teacherId: 'GV002',
    fullName: 'Tr·∫ßn Th·ªã B√¨nh',
    department: 'Khoa C√¥ng ngh·ªá Th√¥ng tin',
    position: 'Gi·∫£ng vi√™n',
    phone: '0902345678',
    dateOfBirth: new Date('1985-07-22'),
    address: 'Qu·∫≠n 3, TP.HCM',
  },
  {
    teacherId: 'GV003',
    fullName: 'L√™ Minh C∆∞·ªùng',
    department: 'Khoa Khoa h·ªçc M√°y t√≠nh',
    position: 'Gi·∫£ng vi√™n cao c·∫•p',
    phone: '0903456789',
    dateOfBirth: new Date('1978-11-08'),
    address: 'Qu·∫≠n 5, TP.HCM',
  },
  {
    teacherId: 'GV004',
    fullName: 'Ph·∫°m Th·ªã Dung',
    department: 'Khoa H·ªá th·ªëng Th√¥ng tin',
    position: 'Gi·∫£ng vi√™n',
    phone: '0904567890',
    dateOfBirth: new Date('1983-05-14'),
    address: 'Qu·∫≠n 7, TP.HCM',
  },
  {
    teacherId: 'GV005',
    fullName: 'Ho√†ng VƒÉn Em',
    department: 'Khoa C√¥ng ngh·ªá Th√¥ng tin',
    position: 'Tr∆∞·ªüng khoa',
    phone: '0905678901',
    dateOfBirth: new Date('1975-09-30'),
    address: 'Qu·∫≠n 10, TP.HCM',
  },
  {
    teacherId: 'GV006',
    fullName: 'V√µ Th·ªã Giang',
    department: 'Khoa K·ªπ thu·∫≠t Ph·∫ßn m·ªÅm',
    position: 'Gi·∫£ng vi√™n',
    phone: '0906789012',
    dateOfBirth: new Date('1987-12-25'),
    address: 'Qu·∫≠n B√¨nh Th·∫°nh, TP.HCM',
  },
  {
    teacherId: 'GV007',
    fullName: 'ƒê·∫∑ng VƒÉn H√πng',
    department: 'Khoa An ninh M·∫°ng',
    position: 'Gi·∫£ng vi√™n ch√≠nh',
    phone: '0907890123',
    dateOfBirth: new Date('1982-04-18'),
    address: 'Qu·∫≠n Ph√∫ Nhu·∫≠n, TP.HCM',
  },
  {
    teacherId: 'GV008',
    fullName: 'B√πi Th·ªã Lan',
    department: 'Khoa C√¥ng ngh·ªá ƒêi·ªán t·ª≠',
    position: 'Gi·∫£ng vi√™n',
    phone: '0908901234',
    dateOfBirth: new Date('1986-08-09'),
    address: 'Qu·∫≠n G√≤ V·∫•p, TP.HCM',
  },
];

// Function to remove Vietnamese diacritics
function removeDiacritics(text: string): string {
  return text
    .normalize('NFD')
    .replace(/[\u0300-\u036f]/g, '')
    .replace(/ƒë/g, 'd')
    .replace(/ƒê/g, 'D');
}

// Generate email from fullName and teacherId
// Format: {firstname}{lastname}{number}@teacher.ptithcm.edu.vn
// Example: Nguy·ªÖn VƒÉn An (GV001) -> annguyen01@teacher.ptithcm.edu.vn
function generateEmail(fullName: string, teacherId: string): string {
  const nameParts = removeDiacritics(fullName).toLowerCase().split(' ');
  
  // Get first name (last part)
  const firstName = nameParts[nameParts.length - 1];
  
  // Get last name (first part - h·ªç)
  const lastName = nameParts[0];
  
  // Get number from teacherId (e.g., "GV001" -> "01")
  const number = teacherId.replace(/\D/g, '').padStart(2, '0').slice(-2);
  
  return `${firstName}${lastName}${number}@teacher.ptithcm.edu.vn`;
}

async function seedTeachers() {
  try {
    await connectToDatabase();
    console.log('‚úÖ Connected to MongoDB Atlas');

    // Clear existing teachers
    await TeacherModel.deleteMany({});
    console.log('üóëÔ∏è  Cleared existing teachers');

    // Hash password for all teachers
    const password = 'teacher123';
    const hashedPassword = await hashPassword(password);

    // Create teachers and users
    const createdTeachers = [];
    for (const teacherData of teachersData) {
      // Generate email
      const email = generateEmail(teacherData.fullName, teacherData.teacherId);

      // Create teacher
      const teacher = await TeacherModel.create({
        ...teacherData,
        email,
      });
      createdTeachers.push(teacher);

      // Create user account
      const existingUser = await UserModel.findOne({ email });
      if (!existingUser) {
        await UserModel.create({
          email,
          passwordHash: hashedPassword,
          role: 'TEACHER',
          teacherId: teacher._id,
        });
      }

      console.log(`‚úÖ Created: ${teacher.fullName} (${teacher.teacherId})`);
      console.log(`   Email: ${email}`);
      console.log(`   Department: ${teacher.department}`);
      console.log(`   Position: ${teacher.position}`);
    }

    // Assign teachers to classes (one teacher per class)
    const classes = await ClassModel.find();
    if (classes.length > 0) {
      for (let i = 0; i < classes.length; i++) {
        const cls = classes[i];
        const teacher = createdTeachers[i % createdTeachers.length];
        await ClassModel.updateOne(
          { _id: cls._id },
          { 
            homeroomTeacher: teacher.email,
            homeroomTeacherName: teacher.fullName
          }
        );
        console.log(`üìö Assigned ${teacher.fullName} to class ${cls.code}`);
      }
    }

    console.log('\n‚úÖ Seeding completed!');
    console.log(`üìä Total teachers: ${createdTeachers.length}`);
    console.log(`üìö Classes assigned: ${classes.length}`);
    console.log('\nüîë All teachers can login with password: teacher123');
    console.log('\nüìß Email examples:');
    createdTeachers.slice(0, 3).forEach(t => {
      console.log(`   - ${t.email}`);
    });

    process.exit(0);
  } catch (error) {
    console.error('‚ùå Error:', error);
    process.exit(1);
  }
}

seedTeachers();
